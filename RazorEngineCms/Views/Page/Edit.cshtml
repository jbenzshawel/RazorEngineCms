@model RazorEngineCms.Models.Page

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@section styles {
    <script src="~/Scripts/vendor/codemirror.js" type="text/javascript"></script>
    <script src="~/Scripts/vendor/codemirror-mode/clike/clike.js" type="text/javascript"></script>
    <script src="~/Scripts/vendor/codemirror-mode/htmlmixed/htmlmixed.js" type="text/javascript"></script>
    <script src="~/Scripts/vendor/codemirror-mode/xml/xml.js" type="text/javascript"></script>
    <link rel="stylesheet" href="~/Content/codemirror.css" type="text/css" />
    <link rel="stylesheet" href="~/Content/codemirror-themes/material.css" type="text/css" />
}
<h2>Edit Page <small>(<a href="/@Model.Section/@Model.Name" target="_blank">View</a>)</small></h2>

<div class="row">
    <div class="col-xs-12">
        <form id="newPage" action="">
            <div class="form-group">
                <label for="pageId">Page Id:</label>
                <span id="pageId">@Model.Id</span> <br />
                <label for="pageUpdated">Updated:</label>
                <span id="pageUpdated">@Model.Updated.ToString()</span>
            </div>
            <div class="form-group" id="template-file-option">
                <p>
                    <strong>Create Template File?</strong>
                </p>
                <label for="templateFileTrue" class="weight-normal">
                    <input type="radio" name="templateFile" id="templateFileTrue" value="true" />
                    True
                </label>
                <label for="templateFileFalse" class="weight-normal">
                    <input type="radio" name="templateFile" id="templateFileFalse" value="false" checked />
                    False
                </label>
            </div>
            <p>Default route is <code>/section/name/param/param2</code> where <code>param</code> and <code>param2</code> are optional parameters.</p>
            <div class="page-route">
                <div class="form-group col-md-6 col-sm-12">
                    <label for="pageVar">Page Section</label>
                    <input type="text" name="pageVar" id="pageVar" class="form-control" value="@Model.Section" />
                </div>
                <div class="form-group col-md-6 col-sm-12">
                    <label for="pageName">Page Name</label>
                    <input type="text" name="pageName" id="pageName" class="form-control" value="@Model.Name" />
                </div>
            </div>
            <div class="form-group">
                <p>
                    <strong>Include page model?</strong><br />
                    Pages can optionally have a page model that uses Url Parameters, User Info, or DataBase Info.
                </p>
                <label for="hasModel-true" class="weight-normal">
                    <input type="radio" name="hasModel" id="hasModel-true" value="true" class="formControl"
                           @if (!string.IsNullOrEmpty(Model.Model)) { @: checked
                                                      } /> Yes
                </label>
                <label for="hasModel-false" class="weight-normal">
                    <input type="radio" name="hasModel" id="hasModel-false" value="false" class="formControl"
                           @if (string.IsNullOrEmpty(Model.Model)) { @: checked
                                                      } /> No
                </label>
            </div>
            <div class="well" id="pageModelSection" style="display:
                 @if(string.IsNullOrEmpty(Model.Model))
                 {
                     @:none
                 }
                 else
                 {
                     @:block
                 };">
                <div class="form-group">
                    <p>
                        <strong>Does this page have url parameters? </strong>(<code>param</code> and/or <code>param2</code>)<br />
                        Note: pages with url parameters cannot be pre compiled
                    </p>
                    <label for="hasParams-true" class="weight-normal">
                        <input type="radio" name="hasParams" id="hasParams-true" value="true" class="formControl"
                               @if (Model.HasParams) { @: checked="checked"
                                                                                                                        } /> True
                    </label>
                    <label for="hasParams-false" class="weight-normal">
                        <input type="radio" name="hasParams" id="hasParams-false" value="false" class="formControl"
                               @if (Model.HasParams != true) { @: checked="checked"
                                                                                                                        } /> False
                    </label>
                </div>
                <div class="form-group">
                    <label for="model">Page Model</label> (<a href="#" data-toggle="modal" data-target="#modelEditorInfoModal">More Info</a>)
                    <p>Create an object variable named <code>Model</code> and access it in view as <code>@@Model.PageModel</code>.</p>
                    <textarea class="form-control" id="model" name="model"></textarea>
                </div>
            </div>
            <div class="form-group">
                <p>
                    <strong>Does this page use an include? </strong><br />
                    Pages with includes have the model format <code>@@Model.PageModel</code> for model created below and <code>@@Model.Includes</code>
                </p>
                <label for="hasInclude-true" class="weight-normal">
                    <input type="radio" name="hasInclude" id="hasInclude-true" value="true" class="formControl"
                           @if (Model.HasInclude == true) { @: checked="checked"
                                                                                   } /> Yes
                </label>
                <label for="hasInclude-false" class="weight-normal">
                    <input type="radio" name="hasInclude" id="hasInclude-false" value="false" class="formControl"
                           @if (Model.HasInclude != true) { @: checked="checked"
                                                                                   } /> No
                </label>
            </div>
            <div class="form-group">
                <label for="template">Page Template </label>
                <p>Access Page Model with Razor Syntax (e.g. <code>@@Model.PropertyName</code>)</p>
                <textarea class="form-control" id="template" name="template"></textarea>
            </div>
            <div class="form-group">
                <input type="submit" class="btn btn-default" id="submitNewPage" />
                <button type="button" class="btn btn-danger" id="deletePage">Delete Page</button>
            </div>
        </form>
    </div>
</div>

@Html.Partial("_ConfiromDeleteModal")
@Html.Partial("_ModelEditorInfoModal")

@section Scripts {
    <script type="text/javascript" src="~/Scripts/page.js"></script>
    <script type="text/javascript">
        "use strict";
        // page object for validating and submitting a new page request
        var page = new Page();
        // setup code mirror editors
        var pageModelEditor = CodeMirror.fromTextArea(document.getElementById("model"), {
            lineNumbers: true,
            matchBrackets: true,
            mode: "text/x-csharp",
            theme: "material"
        });
        pageModelEditor.getDoc().setValue(`@Html.Raw(Model.Model)`);
        pageModelEditor.setSize("100%", "80%");
        var pageTemplateEditor = CodeMirror.fromTextArea(document.getElementById("template"), {
            lineNumbers: true,
            matchBrackets: true,
            mode: "htmlmixed",
            theme: "material"
        });
        pageTemplateEditor.getDoc().setValue(
            @if(!string.IsNullOrEmpty(Model.Template))
            {
                @:`@Html.Raw(Model.Template.Replace("</script>", "<\\/script>"))`
            }
            else
            {
                @:''
                    });
        pageTemplateEditor.setSize("100%", "80%");
        $(function () {
            if (!(page instanceof Page)) {
                page = new Page();
            }
            page.checkPageVariables();
            $("input[name='hasModel']").change(function () {
                page.checkModelStatus();
            });
            $("input[name='hasParams']").change(function () {
                page.checkPageVariables();
            });
            $("#deletePage").click(function (e) {
                e.preventDefault();
                page.init();
                $("#deletePageName").text('"' + page.name + "/" + page.variable + '"');
                $("#deletePageModal").modal("show");
            });
            $("#confirmDeletePage").click(function () {
                page.init();
                page.delete(page.name, page.variable);
                return;
            });
            $("#submitNewPage").click(function (e) {
                e.preventDefault();
                page.save();
            });
            // clears errors after an input field has been updated
            var fields = ["#pageName", "#pageVar", "#model", "#template"]
            for (var i = 0, inputField; inputField = fields[i++];) {
                _default.updateInputField(inputField);
            }
        });
    </script>
}