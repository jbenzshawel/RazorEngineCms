@{
    ViewBag.Title = "New Page";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section styles {
    <script src="~/Scripts/vendor/codemirror.js" type="text/javascript"></script>
    <script src="~/Scripts/vendor/codemirror-mode/clike/clike.js" type="text/javascript"></script>
    <script src="~/Scripts/vendor/codemirror-mode/htmlmixed/htmlmixed.js" type="text/javascript"></script>
    <script src="~/Scripts/vendor/codemirror-mode/xml/xml.js" type="text/javascript"></script>
    <link rel="stylesheet" href="~/Content/codemirror.css" type="text/css" />
    <link rel="stylesheet" href="~/Content/codemirror-themes/material.css" type="text/css" />
}
    <h2>New Page</h2>
    <div class="row">
        <div class="col-xs-12">
            <form id="newPage" action="">
                <p>Default route is <code>/section/name/param/param2</code> where <code>param</code> and <code>param2</code> are option parameters.</p>
                <div class="form-group">
                    <label for="pageVar">Page Section</label>
                    <input type="text" name="pageVar" id="pageVar" class="form-control" />
                </div>
                <div class="form-group">
                    <label for="pageName">Page Name</label>
                    <input type="text" name="pageName" id="pageName" class="form-control" />
                </div>
                <div class="form-group">
                    <p>
                        <strong>Does this page have url parameters? </strong>(<code>param</code> and/or <code>param2</code>)<br />
                        Note: pages with url parameters cannot be pre compiled
                    </p>
                    <label for="hasParams-true" class="weight-normal">
                        <input type="radio" name="hasParams" id="hasParams-true" value="true" class="formControl" /> True
                    </label>
                    <label for="hasParams-false" class="weight-normal">
                        <input type="radio" name="hasParams" id="hasParams-false" value="false" class="formControl" checked /> False
                    </label>
                </div>
                <div class="form-group">
                    <p><strong>Create Template File?</strong></p>
                    <label for="templateFileTrue" class="weight-normal">
                        <input type="radio" name="templateFile" id="templateFileTrue" value="true" />
                        True
                    </label>
                    <label for="templateFileFalse" class="weight-normal">
                        <input type="radio" name="templateFile" id="templateFileFalse" value="false" checked />
                        False
                    </label>
                </div>
                <div class="form-group">
                    <label for="model">Page Model</label> (<a href="#" data-toggle="modal" data-target="#modelEditorInfoModal">More Info</a>)
                    <p>Create an object variable named "Model" to pass .NET code to view.</p>
                    <textarea class="form-control" id="model" name="model"></textarea>
                </div>

                <div class="form-group">
                    <label for="template">Page Template </label>
                    <p>Access Page Model with Razor Syntax (e.g. @@Model.PropertyName)</p>
                    <textarea class="form-control" id="template" name="template"></textarea>
                </div>
                <div class="form-group">
                    <input type="submit" class="btn btn-default" id="submitNewPage" />
                </div>
            </form>
        </div>
    </div>

@Html.Partial("_ModelEditorInfoModal")


@section Scripts {
                <script type="text/javascript" src="~/Scripts/page.js"></script>
    <script type="text/javascript">
        // page object for validating and submitting a new page request 
        var page = new Page();
        // setup code mirror editors 
        var pageModelEditor = CodeMirror.fromTextArea(document.getElementById("model"), {
            lineNumbers: true,
            matchBrackets: true,
            mode: "text/x-csharp",
            theme: "material"
        });
        var pageTemplateEditor = CodeMirror.fromTextArea(document.getElementById("template"), {
            lineNumbers: true,
            matchBrackets: true,
            mode: "xml",
            theme: "material"
        });
        pageModelEditor.setSize("100%", "80%");
        // onload jquery events (events only attached if page object exists else user notifed of error) 
        $(function () {
            if (!(page instanceof Page)) {
                //logger.logError("Page object could not be initialized! JS error may have prevented page object from being created.")
                //alert("Unexpected error. Please try refreshing the page.");
                //return;
                page = new Page(); 
            }
            $("#submitNewPage").click(function (e) {
                e.preventDefault();
                page.save();
            });
            // clears errors after an input field has been updated 
            var fields = ["#pageName", "#pageVar", "#model", "#template"]
            for (var i = 0, inputField; inputField = fields[i++];) {
                _default.updateInputField(inputField);
            }
        });
    </script>
}