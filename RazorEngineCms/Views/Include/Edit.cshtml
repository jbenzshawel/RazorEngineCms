@model Include

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section styles {
    <script src="~/Scripts/vendor/codemirror.js" type="text/javascript"></script>
    <script src="~/Scripts/vendor/codemirror-mode/javascript/javascript.js" type="text/javascript"></script>
    <script src="~/Scripts/vendor/codemirror-mode/htmlmixed/htmlmixed.js" type="text/javascript"></script>
    <script src="~/Scripts/vendor/codemirror-mode/xml/xml.js" type="text/javascript"></script>
    <link rel="stylesheet" href="~/Content/codemirror.css" type="text/css" />
    <link rel="stylesheet" href="~/Content/codemirror-themes/material.css" type="text/css" />
}

<h2>Edit Include</h2>

<div class="row">
    <div class="col-xs-12">
        <form id="newInclude" action="">
            <label for="includeUpdated">Updated:</label>
            <span id="includeUpdated">@Model.Updated.ToString()</span>
            <div class="row">
                <div class="form-group col-sm-12 col-md-6">
                    <label for="includeId">Inlcude Id</label>
                    <span id="includeId">@Model.Id</span>    
                </div>
            </div>
            <div class="row">
                <div class="form-group col-sm-12 col-md-6">
                    <label for="includeName">Include Name</label>
                    <input type="text" name="includeName" id="includeName" value="@Model.Name" class="form-control" />
                </div>
                <div class="form-group col-sm-12 col-md-6">
                    <label for="includeType">Include Type</label>
                    <select class="form-control" id="includeType">
                        <option value="html" 
                        @if (Model.Type == "html")
                        { 
                            @:selected 
                        }
                        >HTML</option>
                        <option value="javascript"
                        @if (Model.Type == "javascript")
                        { 
                            @:selected 
                        }
                        >JavaScript</option>
                    </select>
                </div>
            </div>
            <div class="row" style="margin:0">
                <div class="form-group">
                    <label for="includeContent">Include Content</label>
                    <textarea class="form-control" id="includeContent" name="includeContent"></textarea>
                </div>
            </div>
            <div class="form-group">
                <input type="submit" class="btn btn-default" id="submitNewInclude" />
                <button id="deleteInclude" class="btn btn-danger">Delete</button>
            </div>
        </form>
    </div>
</div>

@Html.Partial("_ConfiromDeleteModal")

@section Scripts {
    <script type="text/javascript" src="~/Scripts/include.js"></script>
    <script type="text/javascript">
        "use strict";
        var include = new Include();
        var deleteModalVue = new Vue({
            data: {
                type: "include",
                modalHeader: "Delete Include?",
                name: ""
            }
        });
        var codeMirrorType = $("#includeType").val() == "html" ? "htmlmixed" : "text/" + $("#includeType").val();
        // setup code mirror editors
        var includeModelEditor = CodeMirror.fromTextArea(document.getElementById("includeContent"), {
            lineNumbers: true,
            matchBrackets: true,
            name: codeMirrorType,
            theme: "material"
        });

        includeModelEditor.getDoc().setValue(`@Html.Raw(Model.Content)`);
        includeModelEditor.setSize("100%", "80%");
        $(function () {
            if (!(include instanceof Include)) {
                include = new Include();
            }
            $("#deleteInclude").click(function (e) {
                e.preventDefault();
                deleteModalVue.name = $(this).attr("data-includename");
                deleteModalVue.$mount("#deleteModal");
                Vue.nextTick(function () {
                    $("#deleteModal").modal("show");
                });
            });
            $("#confirmDelete").click(function () {
                include.init();
                include.delete(include.Id, "#alertMsg");
            });
            $("#submitNewInclude").click(function (e) {
                e.preventDefault();
                include.save();
            });
            // clears errors after an input field has been updated
            var fields = ["#pageName", "#pageVar", "#model", "#template"]
            for (var i = 0, inputField; inputField = fields[i++];) {
                _default.updateInputField(inputField);
            }
        });
    </script>
}